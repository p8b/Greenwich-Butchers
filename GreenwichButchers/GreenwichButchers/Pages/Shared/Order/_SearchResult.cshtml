@model GreenwichButchers.Pages.Shared.OrderRCModel
@* Search result *@
<div class="row">
    @* This hidden field is used to  pass the Id of the selected
        customer from the search result *@
    <input hidden="hidden" id="SelectIDValue" name="SelectIDValue" value="" />
    <div class="col-sm-12 pb-3">
        @* Check if Customer list has objects *@
        @if (Model != null && Model._OrderList != null && Model._OrderList.Count != 0)
        {
            // The default page number
            int PageNum = 1;
            // Used to  decide whether to show the record (true) or not (false)
            var ShowRecord = false;
            // Set the total number of pages
            var TotalPages = 1;

            // Check if total number of searched orders is less than the amount set to be shown per page
            if (Model._OrderList.Count > Model._ShowItemPerPage)
            {
                // divide the total number of orders by the amount set to be shown per page and round it up to the
                // nearest whole number
                TotalPages = Convert.ToInt32(Math.Ceiling((double)Model._OrderList.Count / Model._ShowItemPerPage));
                if (TotalPages == 0)
                {
                    TotalPages = 1;
                }
            }

            @* Drop down menu to choose the amount of search items to show per page *@
            <div class="row">
                <nav class="col-sm-6">
                    <ul class="pagination mb-0 pb-0">
                        <li class="page-item">
                            <div class="dropdown">
                                <button class="btn dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Show @Model._ShowItemPerPage Items Per Page
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    @* Starting from 10 add 5 each time until 50 (Included) *@
                                    @for (var RecPerPageH = 5; RecPerPageH <= 30; RecPerPageH++)
                                    {
                                        <button class="dropdown-item" onclick="return Set_ShowPageNum(this.id)" id="@RecPerPageH" asp-page-handler="PageController">@RecPerPageH</button>
                                        RecPerPageH += 4;

                                    }
                                </div>
                                @* Hidden elements to hold the values for total page number and total shown items per page*@
                                <input id="ShowPageNumItem" type="hidden" asp-for="_ShowItemPerPage" value="@Model._ShowItemPerPage" />
                                <input id="TotalPages" type="hidden" value="@TotalPages" />
                            </div>
                        </li>
                    </ul>
                </nav>
                @* Shows the total number of search records found *@
                <div class="mt-auto ml-auto mr-1"><font size="3" class="col">Records Found: @Model._OrderList.Count</font></div>
            </div>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Order #</th>
                        <th scope="col">Customer #</th>
                        <th scope="col">Order Date</th>
                        <th scope="col">Order Status</th>
                        <th scope="col">Order Type</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>

                    @* Load all the Customers from the Customer list *@
                    @for (var i = 0; i < Model._OrderList.Count; i++)
                    {
                        // if the current item falls within the Show item per page
                        if ((i + 1) % Model._ShowItemPerPage != 0)
                        {
                            // find the page number of the item
                            PageNum = ((i + 1) / Model._ShowItemPerPage) + 1;

                            // if the item page number and the current selected page
                            // number is equal
                            if (PageNum == Model._ShowPageNum)
                            {
                                // show the current item
                                ShowRecord = true;
                            }
                            else // else do not show the current item
                            {
                                ShowRecord = false;
                            }
                        }
                        // Filter the item according to their page
                        if (ShowRecord)
                        {
                            // Hidden element to pass the current page number to the server side
                            <tr hidde="hidden"><td hidden="hidden"><input hidden="hidden" name="currentPageNum" value="@PageNum" /></td></tr>

                            <tr>
                                <th scope="row">@Model?._OrderList[i]?.OrderID</th>
                                <th>@Model?._OrderList[i]?._Customer?.CustomerID</th>
                                <td>@Model?._OrderList[i]?.Date</td>
                                <td>@Model?._OrderList[i]?.Status</td>
                                <td>@Model?._OrderList[i]?.Type</td>
                                <td><a class="btn btn-info col" href="/Order/View/@Model?._OrderList[i]?.OrderID">View Details</a></td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
            <div class="row">
                @* Pagination for search result *@
                <nav class="col-8">
                    <ul id="UlPagination" class="pagination mb-0 pb-0">
                        <li class="page-item disabled"><Button class="page-link" aria-disabled="true">@TotalPages Pages:</Button></li>
                        <li class="page-item">
                            <a class="page-link" onclick="PreviousPagination()" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        @* Load page numbers according to total page numbers received from server side*@
                        @for (var c = 1; c <= TotalPages; c++)
                        {
                            if (Model._ShowPageNum == c)
                            {
                                <li id="LiPage_@c" class="page-item active"><button id="Pagebtn__@c" class="page-link" name="ShowPageNum" value="@c" asp-page-handler="PageController">@c</button></li>
                            }
                            else
                            {
                                <li id="LiPage_@c" class="page-item"><button id="Pagebtn__@c" class="page-link" name="ShowPageNum" value="@c" asp-page-handler="PageController">@c</button></li>
                            }
                        }
                        <li class="page-item">
                            <a class="page-link" onclick="return NextPagination()" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
        // Else No record is found
        else if (ViewData["NoRecordsFound"] != null && (bool)ViewData["NoRecordsFound"] == true)
        {
            <font class="row"><small class="col-12">No Records found</small></font>
        }
    </div>
</div>
